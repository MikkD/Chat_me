{"ast":null,"code":"var _jsxFileName = \"/Users/nikitapetrov/Desktop/chat_me_app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./heart.svg\";\nimport { ReactComponent as ChatLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./chat-logo.svg\";\nimport { ReactComponent as Users } from \"@svgr/webpack?-svgo,+titleProp,+ref!./group.svg\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./send-message.svg\";\nimport './Chat.css';\n\nconst moment = require('moment'); // Setting up Socket on a Front-End\n\n\nconst io = require('socket.io-client');\n\nconst Chat = ({\n  location\n}) => {\n  const [enteredUser, setEnteredUser] = useState('');\n  const [enteredRoom, setEnteredRoom] = useState('');\n  const [justJoinedUsers, setJustJoinedUsers] = useState([]);\n  const [leftUser, setLeftUser] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [allMessages, setAllMessages] = useState([]); // const socket = io.connect('http://localhost:5000');\n\n  useEffect(() => {\n    const socket = io.connect('http://localhost:5000');\n    console.log('useEffect'); //New user\n\n    const newUser = queryString.parse(location.search);\n    setEnteredUser(newUser.name);\n    setEnteredRoom(newUser.room);\n    socket.emit('newUser', newUser, error => {\n      console.log('error', error); //last callback is for network issues.\n    }); // Online users\n    // socket.on('onlineUsers', ({ users }) => {\n    //     console.log('the users', users);\n    //     setOnlineUsers([...onlineUsers, users])\n    // });\n    // \n\n    return () => {\n      console.log('unmounted');\n      socket.disconnect();\n    };\n  }, []); // useEffect(() => {\n  //     socket.on('onlineUsers', ({ users }) => {\n  //         console.log('the users', users);\n  //         setOnlineUsers([...onlineUsers, users])\n  //     });\n  //     console.log('onlineUsers', onlineUsers);\n  // }, [onlineUsers])\n  // Welcome joined user message \n\n  useEffect(() => {\n    const socket = io.connect('http://localhost:5000');\n    console.log('useEffect2'); // User joined the room message\n\n    socket.on('newUserJoined', ({\n      user\n    }) => {\n      console.log(`${user.name} with id ${user.id} just joined the room at ${user.time}`);\n      setJustJoinedUsers([...justJoinedUsers, user]);\n    }); // User left the room message\n\n    socket.on('leftUser', ({\n      leftUser\n    }) => {\n      setLeftUser(leftUser);\n    });\n  }, [justJoinedUsers]); // Joined user message\n\n  function JoinedUs(props) {\n    const {\n      name,\n      room,\n      time\n    } = props.user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-body-chat-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, name, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }\n    }, time)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, name, \" just joined the room \", room, \"!\"));\n  }\n\n  ; // Left user message\n\n  function LeftUser(props) {\n    const {\n      name,\n      room\n    } = props.leftUser;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-body-chat-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, name, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }\n    }, moment().format('h:mm:ss a'))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, name, \" just left the room \", room, \"!\"));\n  }\n\n  ; // Welome user message\n\n  function Welcome() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-body-chat-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, enteredUser, \" welcome to the \", enteredRoom, \" room chat!\"));\n  } //Online users\n\n\n  function OnlineUser() {}\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Chat&Me\", /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    className: \"leave-room-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Leave Room\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-body-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ChatLogo, {\n    className: \"logo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }), \"Room:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"Room1\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Users, {\n    className: \"logo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }), \"Users:\"), onlineUsers.length > 0 ? onlineUsers.map((user, index) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, user.name);\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-body-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Welcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), justJoinedUsers.length > 0 ? justJoinedUsers.map((user, index) => {\n    return /*#__PURE__*/React.createElement(JoinedUs, {\n      key: index,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 36\n      }\n    });\n  }) : null, leftUser ? /*#__PURE__*/React.createElement(LeftUser, {\n    leftUser: leftUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setInputValue(e.target.value),\n    className: \"send-message-input\",\n    placeholder: \"Enter message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setAllMessages([...allMessages, inputValue]),\n    className: \"send-message-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"send-message-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 61\n    }\n  }))))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/nikitapetrov/Desktop/chat_me_app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","Link","moment","require","io","Chat","location","enteredUser","setEnteredUser","enteredRoom","setEnteredRoom","justJoinedUsers","setJustJoinedUsers","leftUser","setLeftUser","onlineUsers","setOnlineUsers","inputValue","setInputValue","allMessages","setAllMessages","socket","connect","console","log","newUser","parse","search","name","room","emit","error","disconnect","on","user","id","time","JoinedUs","props","LeftUser","format","Welcome","OnlineUser","length","map","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from './heart.svg';\nimport { ReactComponent as ChatLogo } from './chat-logo.svg';\nimport { ReactComponent as Users } from './group.svg';\nimport { ReactComponent as SendIcon } from './send-message.svg';\nimport './Chat.css';\nconst moment = require('moment');\n// Setting up Socket on a Front-End\nconst io = require('socket.io-client')\n\n\nconst Chat = ({ location }) => {\n    const [enteredUser, setEnteredUser] = useState('');\n    const [enteredRoom, setEnteredRoom] = useState('');\n    const [justJoinedUsers, setJustJoinedUsers] = useState([]);\n    const [leftUser, setLeftUser] = useState('');\n    const [onlineUsers, setOnlineUsers] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [allMessages, setAllMessages] = useState([]);\n\n\n    // const socket = io.connect('http://localhost:5000');\n\n    useEffect(() => {\n        const socket = io.connect('http://localhost:5000');\n        console.log('useEffect');\n        //New user\n        const newUser = queryString.parse(location.search)\n        setEnteredUser(newUser.name);\n        setEnteredRoom(newUser.room);\n        socket.emit('newUser', (newUser), (error) => {\n            console.log('error', error);\n            //last callback is for network issues.\n        });\n        // Online users\n        // socket.on('onlineUsers', ({ users }) => {\n        //     console.log('the users', users);\n        //     setOnlineUsers([...onlineUsers, users])\n        // });\n        // \n        return () => {\n            console.log('unmounted');\n            socket.disconnect();\n        }\n    }, [])\n\n\n    // useEffect(() => {\n    //     socket.on('onlineUsers', ({ users }) => {\n    //         console.log('the users', users);\n    //         setOnlineUsers([...onlineUsers, users])\n    //     });\n    //     console.log('onlineUsers', onlineUsers);\n    // }, [onlineUsers])\n\n\n    // Welcome joined user message \n    useEffect(() => {\n        const socket = io.connect('http://localhost:5000');\n        console.log('useEffect2');\n        // User joined the room message\n        socket.on('newUserJoined', ({ user }) => {\n            console.log(`${user.name} with id ${user.id} just joined the room at ${user.time}`);\n            setJustJoinedUsers([...justJoinedUsers, user]);\n        });\n        // User left the room message\n        socket.on('leftUser', ({ leftUser }) => {\n            setLeftUser(leftUser);\n        })\n\n\n\n    }, [justJoinedUsers]);\n\n    // Joined user message\n    function JoinedUs(props) {\n        const { name, room, time } = props.user;\n        return (\n            < div className=\"flex-body-chat-message\" >\n                <h5>{name}<span>{time}</span></h5>\n                <p>{name} just joined the room {room}!</p>\n            </div >\n        )\n    };\n    // Left user message\n    function LeftUser(props) {\n        const { name, room } = props.leftUser;\n        return (\n            < div className=\"flex-body-chat-message\" >\n                <h5>{name}<span>{moment().format('h:mm:ss a')}</span></h5>\n                <p>{name} just left the room {room}!</p>\n            </div >\n        )\n    };\n    // Welome user message\n    function Welcome() {\n        return (\n            <div className=\"flex-body-chat-message\">\n                <p>{enteredUser} welcome to the {enteredRoom} room chat!</p>\n            </div>\n        )\n    }\n    //Online users\n    function OnlineUser() {\n\n\n    }\n\n\n\n\n    return (\n        <main className=\"main-block\" >\n            <div className=\"flex-main\">\n                {/* flex-header */}\n                <div className=\"flex-item flex-header\">\n                    <h3>Chat&Me<Logo className=\"logo-header\" /></h3>\n                    <Link to={'/'} className=\"leave-room-button\">Leave Room</Link>\n                </div>\n                {/* flex-body */}\n                <div className=\"flex-item flex-body\">\n                    {/* flex-body-nav */}\n                    <div className=\"flex-body-nav\">\n                        <h3><ChatLogo className=\"logo-nav\" />Room:</h3>\n                        <p>Room1</p>\n                        <h3><Users className=\"logo-nav\" />Users:</h3>\n                        {onlineUsers.length > 0 ? onlineUsers.map((user, index) => {\n                            return (\n                                <p key={index}>{user.name}</p>\n                            )\n                        }) : null}\n\n                        {/* <p>Body</p>\n                        <p>Paul</p>\n                        <p>Alan</p>\n                        <p>Tony</p> */}\n                    </div>\n\n                    {/* flex-body-chat */}\n                    <div className=\"flex-body-chat\">\n\n                        {/* Welcome message */}\n                        <Welcome />\n                        {/* User joined message */}\n                        {justJoinedUsers.length > 0 ? justJoinedUsers.map((user, index) => {\n                            return <JoinedUs key={index} user={user} />\n                        }) : null}\n                        {/* User left message */}\n                        {leftUser ? <LeftUser leftUser={leftUser} /> : null}\n\n                    </div>\n                </div>\n                {/* flex-footer */}\n                <div className=\"flex-item flex-footer\">\n                    <div className=\"footer-wrapper\">\n                        <input\n                            onChange={(e) => setInputValue(e.target.value)}\n                            className=\"send-message-input\"\n                            placeholder=\"Enter message\" />\n                        <button\n                            onClick={() => setAllMessages([...allMessages, inputValue])}\n                            className=\"send-message-button\"><SendIcon className=\"send-message-icon\" /></button>\n\n                    </div>\n                </div>\n            </div>\n        </main >\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}