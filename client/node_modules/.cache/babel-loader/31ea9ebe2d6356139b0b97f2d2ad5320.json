{"ast":null,"code":"var _jsxFileName = \"/Users/nikitapetrov/Desktop/chat_me_app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./heart.svg\";\nimport { ReactComponent as ChatLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./chat-logo.svg\";\nimport { ReactComponent as Users } from \"@svgr/webpack?-svgo,+titleProp,+ref!./group.svg\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./send-message.svg\";\nimport './Chat.css'; // Setting up Socket on a Front-End\n\nconst io = require('socket.io-client');\n\nconst localhost = 'http://localhost:5000';\n\nconst Chat = ({\n  location\n}) => {\n  const [enteredUser, setEnteredUser] = useState('');\n  const [enteredRoom, setEnteredRoom] = useState('');\n  const [welcomeUser, setWelcomeUser] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [message, setMessage] = useState('');\n  const socket = io.connect(localhost); // 1 Initial connection and disconnection\n\n  useEffect(() => {\n    // const socket = io.connect(localhost);\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setEnteredUser(name);\n    setEnteredRoom(room);\n    socket.emit('newUser', {\n      name,\n      room\n    }, error => {\n      console.error('error on client');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [location.search]); // 2 Handling welcome, new user messages.\n\n  useEffect(() => {\n    socket.on('welcome', user => {\n      console.log('user  on welcome || left ', user);\n\n      if (user.name) {\n        setWelcomeUser(oldstate => [...oldstate, user]);\n      }\n    });\n  }); //  3 Handling user left message\n\n  useEffect(() => {\n    socket.on('disconnectedUser', lefUser => {\n      console.log('disconnectedUser', lefUser);\n      setWelcomeUser(oldstate => [...oldstate, lefUser]);\n    });\n  }); // 4 Handling online users\n\n  useEffect(() => {\n    socket.on('onlineUsers', theOnlineUsers => {\n      console.log('onlineUsers', theOnlineUsers); // setOnlineUsers(prevOnlineUsers => [...prevOnlineUsers, theOnlineUsers])\n\n      setOnlineUsers(theOnlineUsers);\n    });\n  }); // 5 Handling sending meesage\n\n  const sendMessage = () => {\n    const theMessage = inputValue;\n    socket.emit('message', theMessage);\n  }; // 6 Handling recieved message from socket\n  // useEffect(() => {\n  //     socket.on('theMessage', (theMessage) => {\n  //     })\n  // })\n\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Chat&Me\", /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    className: \"leave-room-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Leave Room\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-body-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ChatLogo, {\n    className: \"logo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }), \"Room:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, enteredRoom), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Users, {\n    className: \"logo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }), \"Users:\"), onlineUsers.length ? onlineUsers.map((user, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 62\n    }\n  }, user.name)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-body-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, welcomeUser.length > 0 ? welcomeUser.map((user, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"flex-body-chat-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, user.time)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"first-capital-case\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, user.msg));\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-item flex-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: event => console.log('event', event.key),\n    onChange: event => setInputValue(event.target.value),\n    className: \"send-message-input\",\n    placeholder: \"Enter message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    className: \"send-message-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"send-message-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 61\n    }\n  }))))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/nikitapetrov/Desktop/chat_me_app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","Link","io","require","localhost","Chat","location","enteredUser","setEnteredUser","enteredRoom","setEnteredRoom","welcomeUser","setWelcomeUser","onlineUsers","setOnlineUsers","inputValue","setInputValue","message","setMessage","socket","connect","name","room","parse","search","emit","error","console","disconnect","on","user","log","oldstate","lefUser","theOnlineUsers","sendMessage","theMessage","length","map","index","time","msg","event","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from './heart.svg';\nimport { ReactComponent as ChatLogo } from './chat-logo.svg';\nimport { ReactComponent as Users } from './group.svg';\nimport { ReactComponent as SendIcon } from './send-message.svg';\nimport './Chat.css';\n\n// Setting up Socket on a Front-End\nconst io = require('socket.io-client');\nconst localhost = 'http://localhost:5000';\n\nconst Chat = ({ location }) => {\n    const [enteredUser, setEnteredUser] = useState('');\n    const [enteredRoom, setEnteredRoom] = useState('');\n    const [welcomeUser, setWelcomeUser] = useState([]);\n    const [onlineUsers, setOnlineUsers] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [message, setMessage] = useState('');\n    const socket = io.connect(localhost);\n\n\n\n    // 1 Initial connection and disconnection\n    useEffect(() => {\n        // const socket = io.connect(localhost);\n        const { name, room } = queryString.parse(location.search);\n        setEnteredUser(name);\n        setEnteredRoom(room);\n\n        socket.emit('newUser', ({ name, room }), (error) => {\n            console.error('error on client');\n        });\n\n        return () => {\n            socket.disconnect();\n        }\n    }, [location.search]);\n\n\n    // 2 Handling welcome, new user messages.\n    useEffect(() => {\n        socket.on('welcome', (user) => {\n            console.log('user  on welcome || left ', user)\n            if (user.name) {\n                setWelcomeUser(oldstate => [...oldstate, user])\n            }\n        })\n    });\n\n\n    //  3 Handling user left message\n    useEffect(() => {\n        socket.on('disconnectedUser', (lefUser) => {\n            console.log('disconnectedUser', lefUser)\n            setWelcomeUser(oldstate => [...oldstate, lefUser])\n        })\n    });\n\n\n    // 4 Handling online users\n    useEffect(() => {\n        socket.on('onlineUsers', (theOnlineUsers) => {\n            console.log('onlineUsers', theOnlineUsers)\n            // setOnlineUsers(prevOnlineUsers => [...prevOnlineUsers, theOnlineUsers])\n            setOnlineUsers(theOnlineUsers)\n        })\n    });\n\n    // 5 Handling sending meesage\n    const sendMessage = () => {\n        const theMessage = inputValue;\n        socket.emit('message', (theMessage))\n    };\n\n    // 6 Handling recieved message from socket\n    // useEffect(() => {\n    //     socket.on('theMessage', (theMessage) => {\n\n    //     })\n    // })\n\n\n    return (\n        <main className=\"main-block\" >\n            <div className=\"flex-main\">\n                {/* flex-header */}\n                <div className=\"flex-item flex-header\">\n                    <h3>Chat&Me<Logo className=\"logo-header\" /></h3>\n                    <Link to={'/'} className=\"leave-room-button\">Leave Room</Link>\n                </div>\n                {/* flex-body */}\n                <div className=\"flex-item flex-body\">\n                    {/* flex-body-nav */}\n                    <div className=\"flex-body-nav\">\n                        <h3><ChatLogo className=\"logo-nav\" />Room:</h3>\n                        <p>{enteredRoom}</p>\n                        {/* Online Users */}\n                        <h3><Users className=\"logo-nav\" />Users:</h3>\n                        {onlineUsers.length ?\n                            onlineUsers.map((user, index) => <p key={index}>{user.name}</p>)\n                            : null}\n                    </div>\n                    {/* flex-body-chat */}\n                    <div className=\"flex-body-chat\">\n                        {/* Welcome message */}\n                        {welcomeUser.length > 0 ?\n                            welcomeUser.map((user, index) => {\n                                return (\n                                    <div key={index} className=\"flex-body-chat-message\">\n                                        <h5><span>{user.time}</span></h5>\n                                        <p className=\"first-capital-case\">{user.msg}</p>\n                                    </div>\n                                )\n                            }) : null\n                        }\n                        {/* Messages */}\n\n                        {/* <div className=\"flex-body-chat-message\">\n                            <h5>Nick<span>Time</span></h5>\n                            <p>Hellos</p>\n                        </div> */}\n\n\n\n\n                    </div>\n                </div>\n                {/* flex-footer */}\n                <div className=\"flex-item flex-footer\">\n                    <div className=\"footer-wrapper\">\n                        <input\n                            onKeyPress={(event) => console.log('event', event.key)}\n                            onChange={(event) => setInputValue(event.target.value)}\n                            className=\"send-message-input\"\n                            placeholder=\"Enter message\" />\n                        <button\n                            onClick={sendMessage}\n                            className=\"send-message-button\"><SendIcon className=\"send-message-icon\" /></button>\n\n                    </div>\n                </div>\n            </div>\n        </main >\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}